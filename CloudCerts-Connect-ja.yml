openapi: 3.0.0
info:
  version: 1.0.0
  title: CloudCerts Connect
  description: ブロックチェーン証明書を扱うためのAPI
servers:
  - url: 'https://example.com:8080'
    description: CloudCerts Connect API
tags:
  - name: 発行プロセス
paths:
  /certificates/{issuerID}:
    post:
      tags:
        - 発行プロセス
      summary: ブロックチェーン証明書を発行。
      parameters:
        - name: issuerID
          in: path
          required: true
          schema:
            type: string
            format: uuid
            example: c5021f0c-1a98-4d3f-bf08-09b2799c5e00
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                html_template:
                  $ref: '#/components/schemas/htmlTemplate'
                html_template_type:
                  $ref: '#/components/schemas/htmlTemplateType'
                certs_data:
                  description: |
                    各証明書のデータには、名簿、一部の個人情報、HTMLテンプレート変数が含まれています。<br>
                    `certs_data_type`はFormDataフィールドに依存します。<br>
                    CSVの構造:<br>
                    [name, email, console_id, label, <html-template-variables>]<br>
                    **html-template-variablesはパスカルケースでご入力ください。**(camelCase に似ていますが、最初の文字は大文字です。)
                  type: string
                  format: binary
                  example: FormDataのファイルまたはクラウドストレージのキー
                certs_data_type:
                  description: |
                    "certs_data "パラメータのコンテンツタイプを定義します。
                    - `file`: CSVファイルを送信する際に指定。
                    - `storage`: CSVファイルを保存しているクラウドストレージのキーを送信する際に指定。
                    *default*: `file`
                  type: string
                  enum: [ file, storage ]
                save_pdf:
                  $ref: '#/components/schemas/savePdf'
                chain:
                  $ref: '#/components/schemas/chain'
                group_name:
                  $ref: '#/components/schemas/groupName'
                deferred:
                  $ref: '#/components/schemas/deferred'
          application/json:
            schema:
              type: object
              properties:
                html_template:
                  type: object
                  properties:
                    value:
                      $ref: '#/components/schemas/htmlTemplate'
                    type:
                      $ref: '#/components/schemas/htmlTemplateType'
                certificate_data:
                  type: array
                  description: |
                    各証明書のデータ、一部の個人データ、HTMLテンプレートの変数。
                  items:
                    type: object
                    properties:
                      username:
                        type: string
                        example: Example username 1
                      email:
                        type: string
                        example: example@lastrust.io
                      label:
                        type: string
                        description: CloudCerts Manager上のラベル。
                        example: Diploma 2020
                      console_id:
                        type: string
                        description: CloudCerts Manager上の識別子。
                        example: '12212121'
                      template_data:
                        type: object
                        description: HTMLのビジュアルを変更するための変数で、HTMLテンプレートに依存。
                        additionalProperties:
                          type: string
                        example:
                          Name: Example User Name
                save_pdf:
                  $ref: '#/components/schemas/savePdf'
                chain:
                  $ref: '#/components/schemas/chain'
                group_name:
                  $ref: '#/components/schemas/groupName'
                deferred:
                  $ref: '#/components/schemas/deferred'
      responses:
        '200':
          description: リクエストに成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  issuer_id:
                    type: string
                    format: uuid
                    example: e10687c2-4305-43bd-a355-8bd07d26cc95
                  process_id:
                    type: string
                    format: uuid
                    example: e10687c2-4305-43bd-a355-8bd07d26cc95
        '400':
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "issuerIDがUUID文字列でない。"

  /issuers:
    get:
      tags:
        - issuing process
      summary: 発行者リストの取得。
      parameters:
        - in: header
          name: X-PASSWORD
          description: 発行者リストを取得するためのパスワードです。
          schema:
            type: string
            example: secret
      responses:
        200:
          description: リクエストに成功
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
                    example: true
                  code:
                    type: number
                    format: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      issuers:
                        type: array
                        items:
                          type: string
                          example: "c5021f0c-1a98-4d3f-bf08-09b2799c5e00"
        400:
          description: 無効なリクエスト
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                empty password:
                  value:
                    ok: false
                    code: 400
                    error: パスワードを空白にすることはできません。
                wrong password:
                  value:
                    ok: false
                    code: 400
                    error: パスワードが間違っています。


  /issuers/{issuerID}/processes/{processID}:
    get:
      tags:
        - 発行プロセス
      summary: 発行プロセスのステータスを取得。
      parameters:
        - name: issuerID
          in: path
          required: true
          schema:
            type: string
        - name: processID
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: 発行プロセスのステータス。
          content:
            application/json:
              schema:
                type: object
                properties:
                  issuer_id:
                    type: string
                    format: uuid
                    example: e10687c2-4305-43bd-a355-8bd07d26cc95
                  process_id:
                    type: string
                    format: uuid
                    example: e10687c2-4305-43bd-a355-8bd07d26cc95
                  certificates:
                    type: array
                    items:
                      type: object
                      properties:
                        certificate_id:
                          type: string
                          format: uuid
                          example: e10687c2-4305-43bd-a355-8bd07d26cc95
                        console_id:
                          type: string
                          example: 20210805001
                        status:
                          type: string
                          description: status
                          example: Success
                          enum:
                            - Not issued
                            - Success
                            - Deferred
                            - Failed
                        url:
                          type: string
                          example: https://cloudcerts.io/viewer/issuers/<issuerID>/certs/<certID>

components:
  schemas:
    ErrorResponse:
      properties:
        ok:
          type: boolean
          example: false
        code:
          type: number
          format: integer
          example: 400
        error:
          type: string
          example: エラーの説明

    htmlTemplate:
        type: string
        format: binary
        description: |
          HTML証明書テンプレート。
          `html_template.type`、JSONプロパティまたは`html_template_type`のFormDataフィールドに依存します。
        example: "<h1>Hello, {{.Name}}! This is a certificate!</h1>"

    htmlTemplateType:
        type: string
        enum: [ string, link, storage, image ]
        description: |
          "html_template"パラメータのコンテンツタイプを定義する。
          - `string`: HTMLコンテンツを文字列として送信する。 例) "\<h1>Some HTML\</h1>"
          - `link`: HTMLテンプレートのパブリックリンクを送信する。 例) "http://example.com/path/to/index.html"
          - `storage`: HTMLテンプレートを保存するクラウドストレージの鍵を保存する。 例) "storage/<key-name>"
          - `image`: HTMLの代わりに画像を送信する。
          **default**: `storage`
        example: "string"

    savePdf:
        description: |
          発行されたブロックチェーン証明書のPDF文書を保存するためのフラグ。<br>
          CC ViewerでPDFをダウンロードしたい場合は、このフラグをtrueに設定してください。
        type: boolean

    chain:
      description: 発行プロセスで使用されるブロックチェーンネットワーク。
      type: string
      enum: [ ethereum_ropsten, ethereum_mainnet ]
      example: ethereum_ropsten

    groupName:
      description: 発行プロセスの名前。
      type: string
      example: Test group name

    deferred:
      description: |
        証明書の署名を延期するフラグ。
        受取人にビュー（HTML、PDF、QRコード）を作成します。<br>
        _1日1回、バッチ処理によりプロセスの署名を行います_
      type: boolean

  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Access token for API

security:
  - Bearer: []